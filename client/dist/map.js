var O=Object.defineProperty;var M=(l,e,t)=>e in l?O(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t;var I=(l,e,t)=>(M(l,typeof e!="symbol"?e+"":e,t),t);function C(l,e,t,a){function n(r){return r instanceof t?r:new t(function(o){o(r)})}return new(t||(t=Promise))(function(r,o){function d(i){try{s(a.next(i))}catch(c){o(c)}}function m(i){try{s(a.throw(i))}catch(c){o(c)}}function s(i){i.done?r(i.value):n(i.value).then(d,m)}s((a=a.apply(l,e||[])).next())})}function A(l){return l&&l.__esModule&&Object.prototype.hasOwnProperty.call(l,"default")?l.default:l}var L=function l(e,t){if(e===t)return!0;if(e&&t&&typeof e=="object"&&typeof t=="object"){if(e.constructor!==t.constructor)return!1;var a,n,r;if(Array.isArray(e)){if(a=e.length,a!=t.length)return!1;for(n=a;n--!==0;)if(!l(e[n],t[n]))return!1;return!0}if(e.constructor===RegExp)return e.source===t.source&&e.flags===t.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===t.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===t.toString();if(r=Object.keys(e),a=r.length,a!==Object.keys(t).length)return!1;for(n=a;n--!==0;)if(!Object.prototype.hasOwnProperty.call(t,r[n]))return!1;for(n=a;n--!==0;){var o=r[n];if(!l(e[o],t[o]))return!1}return!0}return e!==e&&t!==t},W=A(L);const P="__googleMapsScriptId";var u;(function(l){l[l.INITIALIZED=0]="INITIALIZED",l[l.LOADING=1]="LOADING",l[l.SUCCESS=2]="SUCCESS",l[l.FAILURE=3]="FAILURE"})(u||(u={}));class g{constructor({apiKey:e,authReferrerPolicy:t,channel:a,client:n,id:r=P,language:o,libraries:d=[],mapIds:m,nonce:s,region:i,retries:c=3,url:p="https://maps.googleapis.com/maps/api/js",version:f}){if(this.callbacks=[],this.done=!1,this.loading=!1,this.errors=[],this.apiKey=e,this.authReferrerPolicy=t,this.channel=a,this.client=n,this.id=r||P,this.language=o,this.libraries=d,this.mapIds=m,this.nonce=s,this.region=i,this.retries=c,this.url=p,this.version=f,g.instance){if(!W(this.options,g.instance.options))throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(g.instance.options)}`);return g.instance}g.instance=this}get options(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url,authReferrerPolicy:this.authReferrerPolicy}}get status(){return this.errors.length?u.FAILURE:this.done?u.SUCCESS:this.loading?u.LOADING:u.INITIALIZED}get failed(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}createUrl(){let e=this.url;return e+="?callback=__googleMapsCallback&loading=async",this.apiKey&&(e+=`&key=${this.apiKey}`),this.channel&&(e+=`&channel=${this.channel}`),this.client&&(e+=`&client=${this.client}`),this.libraries.length>0&&(e+=`&libraries=${this.libraries.join(",")}`),this.language&&(e+=`&language=${this.language}`),this.region&&(e+=`&region=${this.region}`),this.version&&(e+=`&v=${this.version}`),this.mapIds&&(e+=`&map_ids=${this.mapIds.join(",")}`),this.authReferrerPolicy&&(e+=`&auth_referrer_policy=${this.authReferrerPolicy}`),e}deleteScript(){const e=document.getElementById(this.id);e&&e.remove()}load(){return this.loadPromise()}loadPromise(){return new Promise((e,t)=>{this.loadCallback(a=>{a?t(a.error):e(window.google)})})}importLibrary(e){return this.execute(),google.maps.importLibrary(e)}loadCallback(e){this.callbacks.push(e),this.execute()}setScript(){var e,t;if(document.getElementById(this.id)){this.callback();return}const a={key:this.apiKey,channel:this.channel,client:this.client,libraries:this.libraries.length&&this.libraries,v:this.version,mapIds:this.mapIds,language:this.language,region:this.region,authReferrerPolicy:this.authReferrerPolicy};Object.keys(a).forEach(r=>!a[r]&&delete a[r]),!((t=(e=window==null?void 0:window.google)===null||e===void 0?void 0:e.maps)===null||t===void 0)&&t.importLibrary||(r=>{let o,d,m,s="The Google Maps JavaScript API",i="google",c="importLibrary",p="__ib__",f=document,h=window;h=h[i]||(h[i]={});const w=h.maps||(h.maps={}),b=new Set,k=new URLSearchParams,E=()=>o||(o=new Promise((y,_)=>C(this,void 0,void 0,function*(){var v;yield d=f.createElement("script"),d.id=this.id,k.set("libraries",[...b]+"");for(m in r)k.set(m.replace(/[A-Z]/g,S=>"_"+S[0].toLowerCase()),r[m]);k.set("callback",i+".maps."+p),d.src=this.url+"?"+k,w[p]=y,d.onerror=()=>o=_(Error(s+" could not load.")),d.nonce=this.nonce||((v=f.querySelector("script[nonce]"))===null||v===void 0?void 0:v.nonce)||"",f.head.append(d)})));w[c]?console.warn(s+" only loads once. Ignoring:",r):w[c]=(y,..._)=>b.add(y)&&E().then(()=>w[c](y,..._))})(a);const n=this.libraries.map(r=>this.importLibrary(r));n.length||n.push(this.importLibrary("core")),Promise.all(n).then(()=>this.callback(),r=>{const o=new ErrorEvent("error",{error:r});this.loadErrorCallback(o)})}reset(){this.deleteScript(),this.done=!1,this.loading=!1,this.errors=[],this.onerrorEvent=null}resetIfRetryingFailed(){this.failed&&this.reset()}loadErrorCallback(e){if(this.errors.push(e),this.errors.length<=this.retries){const t=this.errors.length*Math.pow(2,this.errors.length);console.error(`Failed to load Google Maps script, retrying in ${t} ms.`),setTimeout(()=>{this.deleteScript(),this.setScript()},t)}else this.onerrorEvent=e,this.callback()}callback(){this.done=!0,this.loading=!1,this.callbacks.forEach(e=>{e(this.onerrorEvent)}),this.callbacks=[]}execute(){if(this.resetIfRetryingFailed(),this.done)this.callback();else{if(window.google&&window.google.maps&&window.google.maps.version){console.warn("Google Maps already loaded outside @googlemaps/js-api-loader.This may result in undesirable behavior as options and script parameters may not match."),this.callback();return}this.loading||(this.loading=!0,this.setScript())}}}class F{constructor(){I(this,"loadedSegments",[]);window.addEventListener("resize",()=>this.preLoading()),document.addEventListener("scroll",()=>this.preLoading())}preLoading(){document.querySelectorAll("[data-map-segment]").forEach((e,t)=>{this.loadedSegments.map(n=>n.id).indexOf(t)<0&&this.isVisible(e)&&(this.loadedSegments.push({id:t,el:e}),this.initSegment(e))})}isVisible(e){const{top:t,bottom:a}=e.getBoundingClientRect(),n=window.innerHeight||document.documentElement.clientHeight;return(t>0||a>0)&&t<n}initSegment(e){const t=e.getAttribute("data-segment"),a=e.getAttribute("data-parameters");if(!e||!t)return;const n=JSON.parse(t);let r={center:{lat:n.Latitude,lng:n.Longitude},zoom:n.Zoom,backgroundColor:"#fff"};if(a)var o=JSON.parse(a);if(typeof o<"u"){const i=o.map_theme;var d=o.map_dynamic,m=o.map_inset_overview;delete o.map_theme,delete o.map_dynamic,delete o.map_height,delete o.map_inset_overview,o.mapTypeId==="-"&&delete o.mapTypeId,o.scrollwheel!==""&&(o.scrollwheel=JSON.parse(o.scrollwheel)),i.theme=="custom"&&i.styles?o.styles=JSON.parse(i.styles):n.Theme&&(o.styles=JSON.parse(n.Theme)),Object.keys(o).forEach((c,p)=>{o[c]===""&&delete o[c]}),r={...r,...o}}const s=new g({apiKey:n.Key,version:"weekly"});if(d.enabled){const i=document.getElementById("wrapper");if(d.preview){const c="https://maps.googleapis.com/maps/api/staticmap";i.style.backgroundImage=`url(${c}?center=${r.center.lat},${r.center.lng}&zoom=${r.zoom}&scale=2&size=${i.clientWidth}x${i.clientHeight}&key=${n.Key})`}i.addEventListener("click",()=>{i.remove(),s.load().then(()=>{const c=new google.maps.Map(e,r);this.mapOverviewInit(c,m,e,r),this.markerHandler(c,n,o,null),window.goldfinch&&window.goldfinch.map_callback&&window.goldfinch.map_callback(c,r,n,o)})})}else s.load().then(async()=>{let i=!1;n.Markers.length&&n.Markers.forEach((h,w)=>{h.Parameters&&(h.Parameters=JSON.parse(h.Parameters),h.Parameters&&h.Parameters.marker_type.markerType=="AdvancedMarker"&&!i&&(i=!0))});const{Map:c}=await google.maps.importLibrary("maps");if(o.mapId&&i)var{AdvancedMarkerElement:p}=await google.maps.importLibrary("marker");else var p=null;const f=new c(e,r);this.mapOverviewInit(f,m,e,r),this.markerHandler(f,n,o,p),window.goldfinch&&window.goldfinch.map_callback&&window.goldfinch.map_callback(f,r,n,o)})}markerHandler(e,t,a,n){t.Markers.length&&t.Markers.forEach((r,o)=>{let d;if(r.Parameters){const s={position:{lat:r.Latitude,lng:r.Longitude},map:e,title:r.Title};if(typeof r.Parameters!="object"&&(r.Parameters=JSON.parse(r.Parameters)),r.Parameters.marker_type.markerType=="AdvancedMarker"&&n){if(r.Parameters.marker_type.markerCustomHTML&&r.InfoWindow){const i=document.createElement("div");i.classList.add("custom-map-marker-wrapper"),i.innerHTML=r.InfoWindow,s.content=i}s.gmpDraggable=r.Parameters.marker_type.draggable,d=new n(s),window.goldfinch&&window.goldfinch.marker_callback&&window.goldfinch.marker_callback(d,s,r,e,t,a)}else{if(r.Parameters.marker_type.markerFont&&r.Parameters.marker_type.markerFontFamily&&r.Parameters.marker_type.markerFontCode)s.icon=" ",s.label={fontFamily:r.Parameters.marker_type.markerFontFamily,text:decodeURIComponent(JSON.parse(`"${r.Parameters.marker_type.markerFontCode.replace(/\"/g,'\\"')}"`))},r.Parameters.marker_type.markerFontColor&&(s.label.color=r.Parameters.marker_type.markerFontColor),r.Parameters.marker_type.markerFontSize&&(s.label.fontSize=r.Parameters.marker_type.markerFontSize);else if(r.Icon){const i={url:r.Icon};(r.Parameters.marker_type.markerScaleWidth||r.Parameters.marker_type.markerScaleHeight)&&(i.scaledSize=new google.maps.Size(r.Parameters.marker_type.markerScaleWidth,r.Parameters.marker_type.markerScaleHeight)),(r.Parameters.marker_type.markerAnchorX||r.Parameters.marker_type.markerAnchorY)&&(i.anchor=new google.maps.Point(r.Parameters.marker_type.markerAnchorX,r.Parameters.marker_type.markerAnchorY)),s.icon=i}r.Parameters&&r.Parameters.marker_type.markerAnimation&&(s.animation=google.maps.Animation[r.Parameters.marker_type.markerAnimation]),d=new google.maps.Marker(s),window.goldfinch&&window.goldfinch.marker_callback&&window.goldfinch.marker_callback(d,s,r,e,t,a)}if(r.Parameters&&r.Parameters.info_window.infoWindow&&r.InfoWindow){const i={content:r.InfoWindow,ariaLabel:r.Title};r.Parameters.info_window.infoWindowMaxWidth&&(i.maxWidth=r.Parameters.info_window.infoWindowMaxWidth),r.Parameters.info_window.infoWindowMinWidth&&(i.minWidth=r.Parameters.info_window.infoWindowMinWidth);const c=new google.maps.InfoWindow(i);d.addListener("click",()=>{c.open({anchor:d,map:e})}),window.goldfinch&&window.goldfinch.infoWindow_callback&&window.goldfinch.infoWindow_callback(c,i,d,e,r,t,a)}}})}mapOverviewInit(e,t,a,n){if(t){let c=function(p,f,h){return Math.min(Math.max(p,f),h)};var r=c;let s=a.getAttribute("data-map-segment");s=document.querySelector(`[data-map-overview="${s}"]`),s.style.display="block";const i=new google.maps.Map(s,{...n,gestureHandling:"none",fullscreenControl:!1,mapTypeControl:!1,rotateControl:!1,scaleControl:!1,streetViewControl:!1,zoomControl:!1});e.addListener("bounds_changed",()=>{i.setCenter(e.getCenter()),i.setZoom(c(e.getZoom()-5,3,10))})}}}document.addEventListener("DOMContentLoaded",()=>{new F});
